import { decodeFunctionData } from "viem";

// ABI for the reallocate function
const reallocateAbi = {
  inputs: [
    {
      components: [
        {
          components: [
            { internalType: "address", name: "loanToken", type: "address" },
            { internalType: "address", name: "collateralToken", type: "address" },
            { internalType: "address", name: "oracle", type: "address" },
            { internalType: "address", name: "irm", type: "address" },
            { internalType: "uint256", name: "lltv", type: "uint256" },
          ],
          internalType: "struct MarketParams",
          name: "marketParams",
          type: "tuple",
        },
        { internalType: "uint256", name: "assets", type: "uint256" },
      ],
      internalType: "struct MarketAllocation[]",
      name: "allocations",
      type: "tuple[]",
    },
  ],
  name: "reallocate",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function",
} as const;

// Example calldata - replace this with your actual calldata
const calldata =
  "0x7299aa3100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000009000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000dec933e2392ad908263e70a386fbf34e703ffe8f0000000000000000000000000a7084ccc72b6cd10c0c618372a80aa975267cc500000000000000000000000046415998764c29ab2a25cbea6254146d50d226870000000000000000000000000000000000000000000000000bef55718ad600000000000000000000000000000000000000000000000000000000000136cb69ff000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000940181a94a35a4569e4529a3cdfb74e38fd9863100000000000000000000000096f1485daf396c2ab7e53dc76d7b330143cb226900000000000000000000000046415998764c29ab2a25cbea6254146d50d226870000000000000000000000000000000000000000000000000aaf96eb9d0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda0291300000000000000000000000035e5db674d8e93a03d814fa0ada70731efe8a4b9000000000000000000000000a40e4a5c4ff8ec8ae05648a4f34e02ced8ae9efb00000000000000000000000046415998764c29ab2a25cbea6254146d50d226870000000000000000000000000000000000000000000000000cb2bba6f17b80000000000000000000000000000000000000000000000000000000000371d676d9000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda0291300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005671ac67a5000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda029130000000000000000000000001c2757c1fef1038428b5bef062495ce94bbe92b2000000000000000000000000c8b785c7524e79cf876f18a9035fc778a40d3bc900000000000000000000000046415998764c29ab2a25cbea6254146d50d226870000000000000000000000000000000000000000000000000bef55718ad60000000000000000000000000000000000000000000000000000000001583c6c802c000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000ecac9c5f704e954931349da37f60e39f515c11c10000000000000000000000006e877ff82a5ed6cb4f4789c27d9f9b1d54388e4f00000000000000000000000046415998764c29ab2a25cbea6254146d50d226870000000000000000000000000000000000000000000000000bef55718ad6000000000000000000000000000000000000000000000000000000000010f7473570000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000cbb7c0000ab88b473b1f5afd9ef808440eed33bf000000000000000000000000663becd10dae6c4a3dcd89f1d76c1174199639b900000000000000000000000046415998764c29ab2a25cbea6254146d50d226870000000000000000000000000000000000000000000000000bef55718ad60000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda029130000000000000000000000002ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec220000000000000000000000004756c26e01e61c7c2f86b10f4316e179db8f942500000000000000000000000046415998764c29ab2a25cbea6254146d50d226870000000000000000000000000000000000000000000000000bef55718ad60000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda029130000000000000000000000002416092f143378750bb29b79ed961ab195cceea50000000000000000000000001baab21821c6468f8aee73ee60fd8fdc39c0c97300000000000000000000000046415998764c29ab2a25cbea6254146d50d226870000000000000000000000000000000000000000000000000aaf96eb9d0d0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"; // Replace with actual calldata

function decodeCalldata() {
  try {
    const decoded = decodeFunctionData({
      abi: [reallocateAbi],
      data: calldata as `0x${string}`,
    });

    console.log("Decoded function data:");
    console.log("Function name:", decoded.functionName);
    console.log("Arguments:", JSON.stringify(decoded.args, (key, value) =>
      typeof value === 'bigint' ? value.toString() : value, 2));

    console.log("Allocations length:", decoded.args[0].length);

    return decoded;
  } catch (error) {
    console.error("Error decoding calldata:", error);
    throw error;
  }
}

// Run the decoder
decodeCalldata();

export { decodeCalldata, reallocateAbi };
